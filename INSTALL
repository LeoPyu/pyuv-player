1. Binary install
=================

The preferred way to for installing PYUV is to download the proper binary for your OS/architecture combination:

* Windows 32 bit .exe self-installer (>= Windows XP)
* Ubuntu 64 bit .deb package (>= Ubuntu 15.10)
* Apple Mac OS X 64 bit .dmg archive (>= Mountain Lion)
* FreeBSD 64 bit .txz package (>= Joule 10.2)

The binaries can be downloaded from

* http://dsplab.diei.unipg.it/software/pyuv_raw_video_sequence_player
* https://github.com/gbaruffa/pyuv-player


2. Install from source code
===========================

If your architecture/OS is not currently supported, PYUV can be compiled from the sources. 
The only basic requirements are wxWidgets 3.0 (www.wxwidgets.org) and a modern C++ compiler.


2.1 GNU Autotools
-----------------

Autotools can be used to generate a configuration script.
The configure script can (almost) cover all common distributions requirements, thus the commands are as simple as

$ aclocal
$ autoconf
$ autoheader
$ automake --add-missing
$ ./configure
$ make

Optionally, you can install with

$ sudo make install

Note that this command will install directly the executable in the filesystem. If you prefer a more modern package management system, see the sections below.


2.2 Windows
-----------

Use the extras/MSVC workspace, it contains a Visual Studio 2008 (VC9) solution and projects. For compilation, it is expected that the environment variable %WXWIN30% is set, pointing to the main install folder of wxWidgets 3.0. If you have a newer version ov Visual Studio, just import the existing VC9 solution.
There is also a legacy VC6 workspace and project, but it probably needs some updates to work.
If you want to build a self-extracting installer, in the same folder there is also an InnoSetup script.


2.3 Linux
---------

It should just be sufficient to use the GNU Autotools. If you prefer, the folder extras/CODELITE contains a Codelite 9 project that can be used for improved visual development: it has been tested under Ubuntu 15.10, but should probably work well with any other similar Linux flavor.
A packaging script is provided to build a .deb package (install via Software Center in order to resolve any dependancy).


2.4 Mac OS X
------------

Use the GNU Autotools to build. Use the packaging script in extras/APPLE to build the app and to prepare the DMG installing archive.

 
2.5 FreeBSD
-----------

Use the GNU Autotools. In extras/FREEBSD there is also a Geany project, if you prefer visual compilation, and a packaging script.


2.6 Extras
----------

The folder extras/ART contains the sources of the various icons that are generated.
The folder extras/freedesktop contains files required for correct desktop integration in many linux/FreeBSD distributions.